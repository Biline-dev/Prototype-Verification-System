%-------------------------------------------
% @formula: thm2_5 
% @theory: tp_4
% @pvsfile: exo1.pvs
% @status: ✅ proved
%-------------------------------------------
thm2_5 : PROOF
(spread (induct "l")
  ((then (expand "miroir")(propax))
   (then (skolem 1 ("x" "l"))(flatten)(expand "miroir" 1)(expand "length" 1 2)(lemma "thm2_4")(inst? -1)(replace -1)(assert)(replace -2)(assert)(expand "length" 1)(expand "length")(propax))))
QED thm2_5


%-------------------------------------------
% @formula: thm2_4 
% @theory: tp_4
% @pvsfile: exo1.pvs
% @status: ✅ proved
%-------------------------------------------
thm2_4 : PROOF
(spread (induct "l")
  ((then (skolem 1 "n")(expand "fusion")(assert)(expand "length")(propax))
   (then (skolem 1 ("x" "l"))(flatten)(skolem 1 "p")(expand "fusion" 1)(expand "length" 1 (1 2))(inst? -1))))
QED thm2_4


%-------------------------------------------
% @formula: thm2_2 
% @theory: tp_4
% @pvsfile: exo1.pvs
% @status: ✅ proved
%-------------------------------------------
thm2_2 : PROOF
(spread (induct "l")
  ((then (skolem!)(expand "fusion" 1 1)(expand "miroir" 1 3)(lemma "thm1_2")(inst? -1)(assert))
   (then (skolem!)(flatten)(skolem!)(expand "fusion" 1 1)(expand "miroir" 1 (1 3))(inst? -1)(replace -1)(lemma "thm1_5")(inst? -1))))
QED thm2_2


%-------------------------------------------
% @formula: thm2_3 
% @theory: tp_4
% @pvsfile: exo1.pvs
% @status: ✅ proved
%-------------------------------------------
thm2_3 : PROOF
(spread (induct "l")
  ((then (expand "miroir" 1 2)(expand "miroir" 1 1)(propax))
   (then (skolem!)(flatten)(expand "miroir" 1 2)(lemma "thm2_2")(inst? -1)(replace -1)(expand "miroir" 1 1)(expand "miroir" 1 1)(expand "fusion" 1 2)(expand "fusion" 1 1)(replace -2)(expand "fusion" 1)(propax))))
QED thm2_3


%-------------------------------------------
% @formula: thm1_5 
% @theory: tp_4
% @pvsfile: exo1.pvs
% @status: ✅ proved
%-------------------------------------------
thm1_5 : PROOF
(spread (induct "l")
  ((then (skolem!)(expand "fusion" 1 (2 3))(propax))
   (then (skolem!)(flatten)(skolem!)(expand "fusion" 1 (2 3))(expand "fusion" 1 1)(inst? -1)(replace -1)(propax))))
QED thm1_5


%-------------------------------------------
% @formula: thm1_3 
% @theory: tp_4
% @pvsfile: exo1.pvs
% @status: ✅ proved
%-------------------------------------------
thm1_3 : PROOF
(then (skolem 1 ("l" "p"))(flatten)
  (spread (case ("l=null"))
   ((then (assert)(expand "fusion")(propax))
    (then (expand "fusion")(assert)))))
QED thm1_3


%-------------------------------------------
% @formula: thm0 
% @theory: tp_4
% @pvsfile: exo1.pvs
% @status: ✅ proved
%-------------------------------------------
thm0 : PROOF
(then (grind))
QED thm0


%-------------------------------------------
% @formula: thm1_2 
% @theory: tp_4
% @pvsfile: exo1.pvs
% @status: ✅ proved
%-------------------------------------------
thm1_2 : PROOF
(spread (induct "l")
  ((then (assert)(expand "fusion")(propax))
   (then (skolem 1 ("a" "l"))(flatten)(expand "fusion" 1)(replace -1)(propax))))
QED thm1_2


%-------------------------------------------
% @formula: thm1_4 
% @theory: tp_4
% @pvsfile: exo1.pvs
% @status: ✅ proved
%-------------------------------------------
thm1_4 : PROOF
(then (skolem 1 ("a" "l"))(flatten)(expand "fusion")(assert))
QED thm1_4