{
 "td5_exo11.monthm1": [
  {
   "info": {
    "theory": "td5_exo11",
    "formula": "monthm1",
    "status": "unfinished",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "8e1cdce31674bb5a4c422729af930ec0a15a72b1443a19fd99554948975011a9"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "monthm1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skolem 1 \"f\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(flatten)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(split)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"surject\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"inject1\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(skolem 1 \"z\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst?)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "td5_exo11.thm_td4": [
  {
   "info": {
    "theory": "td5_exo11",
    "formula": "thm_td4",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "8e1cdce31674bb5a4c422729af930ec0a15a72b1443a19fd99554948975011a9"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "thm_td4",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skolem 1 \"f\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(flatten)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(split)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"surject\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"inject1\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(skolem 1 \"y\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"comp\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(decompose-equality)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst 1 \"f(y)\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst -1 \"y\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst -2 \"f(f(y))\" \"y\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"inject1\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"surject\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(skolem 1 (\"x\" \"y\"))",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"comp\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(decompose-equality)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(inst-cp -2 \"x\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(skolem -3 \"u\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(inst -2 \"y\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(skolem -2 \"v\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(inst-cp -1 \"u\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(inst -1 \"v\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ]
}